//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.BUS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ban", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Ban : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaBanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenBanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrangThaiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaBan {
            get {
                return this.MaBanField;
            }
            set {
                if ((this.MaBanField.Equals(value) != true)) {
                    this.MaBanField = value;
                    this.RaisePropertyChanged("MaBan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenBan {
            get {
                return this.TenBanField;
            }
            set {
                if ((object.ReferenceEquals(this.TenBanField, value) != true)) {
                    this.TenBanField = value;
                    this.RaisePropertyChanged("TenBan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrangThai {
            get {
                return this.TrangThaiField;
            }
            set {
                if ((object.ReferenceEquals(this.TrangThaiField, value) != true)) {
                    this.TrangThaiField = value;
                    this.RaisePropertyChanged("TrangThai");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChiTietHoaDon", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ChiTietHoaDon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.BUS.HoaDon HoadonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAHDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaCTHDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SOLUONGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.BUS.ThucDon ThucdonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tenNVField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.BUS.HoaDon Hoadon {
            get {
                return this.HoadonField;
            }
            set {
                if ((object.ReferenceEquals(this.HoadonField, value) != true)) {
                    this.HoadonField = value;
                    this.RaisePropertyChanged("Hoadon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAHD {
            get {
                return this.MAHDField;
            }
            set {
                if ((object.ReferenceEquals(this.MAHDField, value) != true)) {
                    this.MAHDField = value;
                    this.RaisePropertyChanged("MAHD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaCTHD {
            get {
                return this.MaCTHDField;
            }
            set {
                if ((object.ReferenceEquals(this.MaCTHDField, value) != true)) {
                    this.MaCTHDField = value;
                    this.RaisePropertyChanged("MaCTHD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SOLUONG {
            get {
                return this.SOLUONGField;
            }
            set {
                if ((this.SOLUONGField.Equals(value) != true)) {
                    this.SOLUONGField = value;
                    this.RaisePropertyChanged("SOLUONG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.BUS.ThucDon Thucdon {
            get {
                return this.ThucdonField;
            }
            set {
                if ((object.ReferenceEquals(this.ThucdonField, value) != true)) {
                    this.ThucdonField = value;
                    this.RaisePropertyChanged("Thucdon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tenNV {
            get {
                return this.tenNVField;
            }
            set {
                if ((object.ReferenceEquals(this.tenNVField, value) != true)) {
                    this.tenNVField = value;
                    this.RaisePropertyChanged("tenNV");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HoaDon", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class HoaDon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.BUS.Ban BANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.BUS.ChiTietHoaDon[] ChiTietHoaDonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GIAMGIAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAHDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NgayDenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoluongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TongTien1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.BUS.Ban BAN {
            get {
                return this.BANField;
            }
            set {
                if ((object.ReferenceEquals(this.BANField, value) != true)) {
                    this.BANField = value;
                    this.RaisePropertyChanged("BAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.BUS.ChiTietHoaDon[] ChiTietHoaDons {
            get {
                return this.ChiTietHoaDonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChiTietHoaDonsField, value) != true)) {
                    this.ChiTietHoaDonsField = value;
                    this.RaisePropertyChanged("ChiTietHoaDons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GIAMGIA {
            get {
                return this.GIAMGIAField;
            }
            set {
                if ((this.GIAMGIAField.Equals(value) != true)) {
                    this.GIAMGIAField = value;
                    this.RaisePropertyChanged("GIAMGIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAHD {
            get {
                return this.MAHDField;
            }
            set {
                if ((object.ReferenceEquals(this.MAHDField, value) != true)) {
                    this.MAHDField = value;
                    this.RaisePropertyChanged("MAHD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NgayDen {
            get {
                return this.NgayDenField;
            }
            set {
                if ((this.NgayDenField.Equals(value) != true)) {
                    this.NgayDenField = value;
                    this.RaisePropertyChanged("NgayDen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Soluong {
            get {
                return this.SoluongField;
            }
            set {
                if ((this.SoluongField.Equals(value) != true)) {
                    this.SoluongField = value;
                    this.RaisePropertyChanged("Soluong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TongTien1 {
            get {
                return this.TongTien1Field;
            }
            set {
                if ((this.TongTien1Field.Equals(value) != true)) {
                    this.TongTien1Field = value;
                    this.RaisePropertyChanged("TongTien1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThucDon", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ThucDon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DONGIAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DVTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MAMONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.BUS.NhomMon NhomMonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoluongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tenmonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DONGIA {
            get {
                return this.DONGIAField;
            }
            set {
                if ((this.DONGIAField.Equals(value) != true)) {
                    this.DONGIAField = value;
                    this.RaisePropertyChanged("DONGIA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DVT {
            get {
                return this.DVTField;
            }
            set {
                if ((object.ReferenceEquals(this.DVTField, value) != true)) {
                    this.DVTField = value;
                    this.RaisePropertyChanged("DVT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MAMON {
            get {
                return this.MAMONField;
            }
            set {
                if ((this.MAMONField.Equals(value) != true)) {
                    this.MAMONField = value;
                    this.RaisePropertyChanged("MAMON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.BUS.NhomMon NhomMon {
            get {
                return this.NhomMonField;
            }
            set {
                if ((object.ReferenceEquals(this.NhomMonField, value) != true)) {
                    this.NhomMonField = value;
                    this.RaisePropertyChanged("NhomMon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Soluong {
            get {
                return this.SoluongField;
            }
            set {
                if ((this.SoluongField.Equals(value) != true)) {
                    this.SoluongField = value;
                    this.RaisePropertyChanged("Soluong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tenmon {
            get {
                return this.tenmonField;
            }
            set {
                if ((object.ReferenceEquals(this.tenmonField, value) != true)) {
                    this.tenmonField = value;
                    this.RaisePropertyChanged("tenmon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NhomMon", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class NhomMon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaloaiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoluongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenloaiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAU {
            get {
                return this.MAUField;
            }
            set {
                if ((object.ReferenceEquals(this.MAUField, value) != true)) {
                    this.MAUField = value;
                    this.RaisePropertyChanged("MAU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maloai {
            get {
                return this.MaloaiField;
            }
            set {
                if ((this.MaloaiField.Equals(value) != true)) {
                    this.MaloaiField = value;
                    this.RaisePropertyChanged("Maloai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Soluong {
            get {
                return this.SoluongField;
            }
            set {
                if ((this.SoluongField.Equals(value) != true)) {
                    this.SoluongField = value;
                    this.RaisePropertyChanged("Soluong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tenloai {
            get {
                return this.TenloaiField;
            }
            set {
                if ((object.ReferenceEquals(this.TenloaiField, value) != true)) {
                    this.TenloaiField = value;
                    this.RaisePropertyChanged("Tenloai");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gmail", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Gmail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NhanVien", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class NhanVien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Chucvu1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GioiTinh1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaKhau1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaNV1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SDT1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Ten1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chucvu1 {
            get {
                return this.Chucvu1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Chucvu1Field, value) != true)) {
                    this.Chucvu1Field = value;
                    this.RaisePropertyChanged("Chucvu1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GioiTinh1 {
            get {
                return this.GioiTinh1Field;
            }
            set {
                if ((object.ReferenceEquals(this.GioiTinh1Field, value) != true)) {
                    this.GioiTinh1Field = value;
                    this.RaisePropertyChanged("GioiTinh1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaKhau1 {
            get {
                return this.MaKhau1Field;
            }
            set {
                if ((object.ReferenceEquals(this.MaKhau1Field, value) != true)) {
                    this.MaKhau1Field = value;
                    this.RaisePropertyChanged("MaKhau1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaNV1 {
            get {
                return this.MaNV1Field;
            }
            set {
                if ((object.ReferenceEquals(this.MaNV1Field, value) != true)) {
                    this.MaNV1Field = value;
                    this.RaisePropertyChanged("MaNV1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SDT1 {
            get {
                return this.SDT1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SDT1Field, value) != true)) {
                    this.SDT1Field = value;
                    this.RaisePropertyChanged("SDT1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ten1 {
            get {
                return this.Ten1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Ten1Field, value) != true)) {
                    this.Ten1Field = value;
                    this.RaisePropertyChanged("Ten1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLBan", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLBan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLChiTietHD", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLChiTietHD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLHoaDon", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLHoaDon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLNhanvien", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLNhanvien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLNhomMon", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLNhomMon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLThucDon", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLThucDon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BLLThucDonPhaChe", Namespace="http://schemas.datacontract.org/2004/07/BUS")]
    [System.SerializableAttribute()]
    public partial class BLLThucDonPhaChe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BUS.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOBAN", ReplyAction="http://tempuri.org/IService1/DTOBANResponse")]
        GUI.BUS.Ban DTOBAN(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOBAN", ReplyAction="http://tempuri.org/IService1/DTOBANResponse")]
        System.Threading.Tasks.Task<GUI.BUS.Ban> DTOBANAsync(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOchitiethoadon", ReplyAction="http://tempuri.org/IService1/DTOchitiethoadonResponse")]
        GUI.BUS.ChiTietHoaDon DTOchitiethoadon(GUI.BUS.ChiTietHoaDon chitiethoadon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOchitiethoadon", ReplyAction="http://tempuri.org/IService1/DTOchitiethoadonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon> DTOchitiethoadonAsync(GUI.BUS.ChiTietHoaDon chitiethoadon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOGMAIL", ReplyAction="http://tempuri.org/IService1/DTOGMAILResponse")]
        GUI.BUS.Gmail DTOGMAIL(GUI.BUS.Gmail gmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOGMAIL", ReplyAction="http://tempuri.org/IService1/DTOGMAILResponse")]
        System.Threading.Tasks.Task<GUI.BUS.Gmail> DTOGMAILAsync(GUI.BUS.Gmail gmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOHOAODN", ReplyAction="http://tempuri.org/IService1/DTOHOAODNResponse")]
        GUI.BUS.HoaDon DTOHOAODN(GUI.BUS.HoaDon hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOHOAODN", ReplyAction="http://tempuri.org/IService1/DTOHOAODNResponse")]
        System.Threading.Tasks.Task<GUI.BUS.HoaDon> DTOHOAODNAsync(GUI.BUS.HoaDon hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTONHANVIEN", ReplyAction="http://tempuri.org/IService1/DTONHANVIENResponse")]
        GUI.BUS.NhanVien DTONHANVIEN(GUI.BUS.NhanVien nhanVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTONHANVIEN", ReplyAction="http://tempuri.org/IService1/DTONHANVIENResponse")]
        System.Threading.Tasks.Task<GUI.BUS.NhanVien> DTONHANVIENAsync(GUI.BUS.NhanVien nhanVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTONHOMMON", ReplyAction="http://tempuri.org/IService1/DTONHOMMONResponse")]
        GUI.BUS.NhomMon DTONHOMMON(GUI.BUS.NhomMon Nhommon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTONHOMMON", ReplyAction="http://tempuri.org/IService1/DTONHOMMONResponse")]
        System.Threading.Tasks.Task<GUI.BUS.NhomMon> DTONHOMMONAsync(GUI.BUS.NhomMon Nhommon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOTHUCDON", ReplyAction="http://tempuri.org/IService1/DTOTHUCDONResponse")]
        GUI.BUS.ThucDon DTOTHUCDON(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DTOTHUCDON", ReplyAction="http://tempuri.org/IService1/DTOTHUCDONResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon> DTOTHUCDONAsync(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RGB", ReplyAction="http://tempuri.org/IService1/RGBResponse")]
        string[] RGB(GUI.BUS.NhomMon Nhommon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RGB", ReplyAction="http://tempuri.org/IService1/RGBResponse")]
        System.Threading.Tasks.Task<string[]> RGBAsync(GUI.BUS.NhomMon Nhommon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TONGTIEN", ReplyAction="http://tempuri.org/IService1/TONGTIENResponse")]
        int TONGTIEN(GUI.BUS.ChiTietHoaDon[] chitet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TONGTIEN", ReplyAction="http://tempuri.org/IService1/TONGTIENResponse")]
        System.Threading.Tasks.Task<int> TONGTIENAsync(GUI.BUS.ChiTietHoaDon[] chitet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TinhTienGiam", ReplyAction="http://tempuri.org/IService1/TinhTienGiamResponse")]
        int TinhTienGiam(int n, GUI.BUS.ChiTietHoaDon[] chitet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TinhTienGiam", ReplyAction="http://tempuri.org/IService1/TinhTienGiamResponse")]
        System.Threading.Tasks.Task<int> TinhTienGiamAsync(int n, GUI.BUS.ChiTietHoaDon[] chitet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Send", ReplyAction="http://tempuri.org/IService1/SendResponse")]
        void Send(string Gmail, GUI.BUS.Gmail sendmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Send", ReplyAction="http://tempuri.org/IService1/SendResponse")]
        System.Threading.Tasks.Task SendAsync(string Gmail, GUI.BUS.Gmail sendmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLBAN", ReplyAction="http://tempuri.org/IService1/BLLBANResponse")]
        GUI.BUS.BLLBan BLLBAN(GUI.BUS.BLLBan N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLBAN", ReplyAction="http://tempuri.org/IService1/BLLBANResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLBan> BLLBANAsync(GUI.BUS.BLLBan N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLCTHD", ReplyAction="http://tempuri.org/IService1/BLLCTHDResponse")]
        GUI.BUS.BLLChiTietHD BLLCTHD(GUI.BUS.BLLChiTietHD N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLCTHD", ReplyAction="http://tempuri.org/IService1/BLLCTHDResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLChiTietHD> BLLCTHDAsync(GUI.BUS.BLLChiTietHD N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLHOADON", ReplyAction="http://tempuri.org/IService1/BLLHOADONResponse")]
        GUI.BUS.BLLHoaDon BLLHOADON(GUI.BUS.BLLHoaDon N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLHOADON", ReplyAction="http://tempuri.org/IService1/BLLHOADONResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLHoaDon> BLLHOADONAsync(GUI.BUS.BLLHoaDon N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLNHANVIEN", ReplyAction="http://tempuri.org/IService1/BLLNHANVIENResponse")]
        GUI.BUS.BLLNhanvien BLLNHANVIEN(GUI.BUS.BLLNhanvien N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLNHANVIEN", ReplyAction="http://tempuri.org/IService1/BLLNHANVIENResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLNhanvien> BLLNHANVIENAsync(GUI.BUS.BLLNhanvien N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLNHOMMON", ReplyAction="http://tempuri.org/IService1/BLLNHOMMONResponse")]
        GUI.BUS.BLLNhomMon BLLNHOMMON(GUI.BUS.BLLNhomMon N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLNHOMMON", ReplyAction="http://tempuri.org/IService1/BLLNHOMMONResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLNhomMon> BLLNHOMMONAsync(GUI.BUS.BLLNhomMon N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLTHUCDON", ReplyAction="http://tempuri.org/IService1/BLLTHUCDONResponse")]
        GUI.BUS.BLLThucDon BLLTHUCDON(GUI.BUS.BLLThucDon N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLTHUCDON", ReplyAction="http://tempuri.org/IService1/BLLTHUCDONResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLThucDon> BLLTHUCDONAsync(GUI.BUS.BLLThucDon N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLTDPC", ReplyAction="http://tempuri.org/IService1/BLLTDPCResponse")]
        GUI.BUS.BLLThucDonPhaChe BLLTDPC(GUI.BUS.BLLThucDonPhaChe N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BLLTDPC", ReplyAction="http://tempuri.org/IService1/BLLTDPCResponse")]
        System.Threading.Tasks.Task<GUI.BUS.BLLThucDonPhaChe> BLLTDPCAsync(GUI.BUS.BLLThucDonPhaChe N);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectBan", ReplyAction="http://tempuri.org/IService1/SelectBanResponse")]
        GUI.BUS.Ban[] SelectBan();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectBan", ReplyAction="http://tempuri.org/IService1/SelectBanResponse")]
        System.Threading.Tasks.Task<GUI.BUS.Ban[]> SelectBanAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongSoBan", ReplyAction="http://tempuri.org/IService1/TongSoBanResponse")]
        GUI.BUS.Ban[] TongSoBan();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongSoBan", ReplyAction="http://tempuri.org/IService1/TongSoBanResponse")]
        System.Threading.Tasks.Task<GUI.BUS.Ban[]> TongSoBanAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBan", ReplyAction="http://tempuri.org/IService1/InsertBanResponse")]
        int InsertBan(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertBan", ReplyAction="http://tempuri.org/IService1/InsertBanResponse")]
        System.Threading.Tasks.Task<int> InsertBanAsync(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdeteBan", ReplyAction="http://tempuri.org/IService1/UpdeteBanResponse")]
        int UpdeteBan(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdeteBan", ReplyAction="http://tempuri.org/IService1/UpdeteBanResponse")]
        System.Threading.Tasks.Task<int> UpdeteBanAsync(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBan", ReplyAction="http://tempuri.org/IService1/DeleteBanResponse")]
        int DeleteBan(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBan", ReplyAction="http://tempuri.org/IService1/DeleteBanResponse")]
        System.Threading.Tasks.Task<int> DeleteBanAsync(GUI.BUS.Ban ban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChiTietHD", ReplyAction="http://tempuri.org/IService1/GetChiTietHDResponse")]
        GUI.BUS.ChiTietHoaDon[] GetChiTietHD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChiTietHD", ReplyAction="http://tempuri.org/IService1/GetChiTietHDResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> GetChiTietHDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemCTHD", ReplyAction="http://tempuri.org/IService1/TimKiemCTHDResponse")]
        GUI.BUS.ChiTietHoaDon[] TimKiemCTHD(int timkiem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemCTHD", ReplyAction="http://tempuri.org/IService1/TimKiemCTHDResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> TimKiemCTHDAsync(int timkiem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetCTHD", ReplyAction="http://tempuri.org/IService1/InsetCTHDResponse")]
        int InsetCTHD(GUI.BUS.ChiTietHoaDon chiTiet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetCTHD", ReplyAction="http://tempuri.org/IService1/InsetCTHDResponse")]
        System.Threading.Tasks.Task<int> InsetCTHDAsync(GUI.BUS.ChiTietHoaDon chiTiet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCTHD", ReplyAction="http://tempuri.org/IService1/UpdateCTHDResponse")]
        int UpdateCTHD(GUI.BUS.ChiTietHoaDon chiTiet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCTHD", ReplyAction="http://tempuri.org/IService1/UpdateCTHDResponse")]
        System.Threading.Tasks.Task<int> UpdateCTHDAsync(GUI.BUS.ChiTietHoaDon chiTiet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCTHD2", ReplyAction="http://tempuri.org/IService1/UpdateCTHD2Response")]
        int UpdateCTHD2(string MaHd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCTHD2", ReplyAction="http://tempuri.org/IService1/UpdateCTHD2Response")]
        System.Threading.Tasks.Task<int> UpdateCTHD2Async(string MaHd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCTHD", ReplyAction="http://tempuri.org/IService1/DeleteCTHDResponse")]
        int DeleteCTHD(string thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCTHD", ReplyAction="http://tempuri.org/IService1/DeleteCTHDResponse")]
        System.Threading.Tasks.Task<int> DeleteCTHDAsync(string thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon5", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDon5Response")]
        GUI.BUS.HoaDon[] TimKiemHoaDon5();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon5", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDon5Response")]
        System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TimKiemHoaDon5Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ThongkeHD", ReplyAction="http://tempuri.org/IService1/ThongkeHDResponse")]
        string ThongkeHD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ThongkeHD", ReplyAction="http://tempuri.org/IService1/ThongkeHDResponse")]
        System.Threading.Tasks.Task<string> ThongkeHDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHD", ReplyAction="http://tempuri.org/IService1/GetHDResponse")]
        GUI.BUS.HoaDon[] GetHD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHD", ReplyAction="http://tempuri.org/IService1/GetHDResponse")]
        System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> GetHDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetHD", ReplyAction="http://tempuri.org/IService1/InsetHDResponse")]
        int InsetHD(GUI.BUS.HoaDon hoaDon, string MANV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetHD", ReplyAction="http://tempuri.org/IService1/InsetHDResponse")]
        System.Threading.Tasks.Task<int> InsetHDAsync(GUI.BUS.HoaDon hoaDon, string MANV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon1", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDon1Response")]
        GUI.BUS.HoaDon[] TimKiemHoaDon1(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon1", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDon1Response")]
        System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TimKiemHoaDon1Async(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongSoHd", ReplyAction="http://tempuri.org/IService1/TongSoHdResponse")]
        GUI.BUS.HoaDon[] TongSoHd(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongSoHd", ReplyAction="http://tempuri.org/IService1/TongSoHdResponse")]
        System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TongSoHdAsync(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon2", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDon2Response")]
        GUI.BUS.HoaDon[] TimKiemHoaDon2(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon2", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDon2Response")]
        System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TimKiemHoaDon2Async(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDonResponse")]
        GUI.BUS.ChiTietHoaDon[] TimKiemHoaDon(int maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemHoaDon", ReplyAction="http://tempuri.org/IService1/TimKiemHoaDonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> TimKiemHoaDonAsync(int maBan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetHD1", ReplyAction="http://tempuri.org/IService1/InsetHD1Response")]
        int InsetHD1(GUI.BUS.HoaDon hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetHD1", ReplyAction="http://tempuri.org/IService1/InsetHD1Response")]
        System.Threading.Tasks.Task<int> InsetHD1Async(GUI.BUS.HoaDon hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateHD", ReplyAction="http://tempuri.org/IService1/UpdateHDResponse")]
        int UpdateHD(GUI.BUS.HoaDon hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateHD", ReplyAction="http://tempuri.org/IService1/UpdateHDResponse")]
        System.Threading.Tasks.Task<int> UpdateHDAsync(GUI.BUS.HoaDon hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteHD", ReplyAction="http://tempuri.org/IService1/DeleteHDResponse")]
        int DeleteHD(int hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteHD", ReplyAction="http://tempuri.org/IService1/DeleteHDResponse")]
        System.Threading.Tasks.Task<int> DeleteHDAsync(int hoaDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectNV", ReplyAction="http://tempuri.org/IService1/SelectNVResponse")]
        GUI.BUS.NhanVien[] SelectNV();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectNV", ReplyAction="http://tempuri.org/IService1/SelectNVResponse")]
        System.Threading.Tasks.Task<GUI.BUS.NhanVien[]> SelectNVAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertIntoNV", ReplyAction="http://tempuri.org/IService1/InsertIntoNVResponse")]
        int InsertIntoNV(GUI.BUS.NhanVien nhanVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertIntoNV", ReplyAction="http://tempuri.org/IService1/InsertIntoNVResponse")]
        System.Threading.Tasks.Task<int> InsertIntoNVAsync(GUI.BUS.NhanVien nhanVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNV", ReplyAction="http://tempuri.org/IService1/UpdateNVResponse")]
        int UpdateNV(GUI.BUS.NhanVien nhanVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNV", ReplyAction="http://tempuri.org/IService1/UpdateNVResponse")]
        System.Threading.Tasks.Task<int> UpdateNVAsync(GUI.BUS.NhanVien nhanVien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNV", ReplyAction="http://tempuri.org/IService1/DeleteNVResponse")]
        int DeleteNV(string MANV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNV", ReplyAction="http://tempuri.org/IService1/DeleteNVResponse")]
        System.Threading.Tasks.Task<int> DeleteNVAsync(string MANV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectNhomMon", ReplyAction="http://tempuri.org/IService1/SelectNhomMonResponse")]
        GUI.BUS.NhomMon[] SelectNhomMon();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectNhomMon", ReplyAction="http://tempuri.org/IService1/SelectNhomMonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.NhomMon[]> SelectNhomMonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongNhomMon", ReplyAction="http://tempuri.org/IService1/TongNhomMonResponse")]
        GUI.BUS.NhomMon[] TongNhomMon();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongNhomMon", ReplyAction="http://tempuri.org/IService1/TongNhomMonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.NhomMon[]> TongNhomMonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertNhomMon", ReplyAction="http://tempuri.org/IService1/InsertNhomMonResponse")]
        int InsertNhomMon(GUI.BUS.NhomMon nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertNhomMon", ReplyAction="http://tempuri.org/IService1/InsertNhomMonResponse")]
        System.Threading.Tasks.Task<int> InsertNhomMonAsync(GUI.BUS.NhomMon nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNhomMon", ReplyAction="http://tempuri.org/IService1/UpdateNhomMonResponse")]
        int UpdateNhomMon(GUI.BUS.NhomMon nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNhomMon", ReplyAction="http://tempuri.org/IService1/UpdateNhomMonResponse")]
        System.Threading.Tasks.Task<int> UpdateNhomMonAsync(GUI.BUS.NhomMon nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNhomMon", ReplyAction="http://tempuri.org/IService1/DeleteNhomMonResponse")]
        int DeleteNhomMon(GUI.BUS.NhomMon nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNhomMon", ReplyAction="http://tempuri.org/IService1/DeleteNhomMonResponse")]
        System.Threading.Tasks.Task<int> DeleteNhomMonAsync(GUI.BUS.NhomMon nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemNhomMon", ReplyAction="http://tempuri.org/IService1/TimKiemNhomMonResponse")]
        GUI.BUS.NhomMon[] TimKiemNhomMon(string nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemNhomMon", ReplyAction="http://tempuri.org/IService1/TimKiemNhomMonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.NhomMon[]> TimKiemNhomMonAsync(string nhom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectThucDon", ReplyAction="http://tempuri.org/IService1/SelectThucDonResponse")]
        GUI.BUS.ThucDon[] SelectThucDon();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectThucDon", ReplyAction="http://tempuri.org/IService1/SelectThucDonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> SelectThucDonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongSoMon", ReplyAction="http://tempuri.org/IService1/TongSoMonResponse")]
        GUI.BUS.ThucDon[] TongSoMon();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TongSoMon", ReplyAction="http://tempuri.org/IService1/TongSoMonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TongSoMonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectThucDon1", ReplyAction="http://tempuri.org/IService1/SelectThucDon1Response")]
        GUI.BUS.ThucDon[] SelectThucDon1(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectThucDon1", ReplyAction="http://tempuri.org/IService1/SelectThucDon1Response")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> SelectThucDon1Async(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectThucDon2", ReplyAction="http://tempuri.org/IService1/SelectThucDon2Response")]
        GUI.BUS.ThucDon[] SelectThucDon2(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectThucDon2", ReplyAction="http://tempuri.org/IService1/SelectThucDon2Response")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> SelectThucDon2Async(System.DateTime time1, System.DateTime time2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetThucDon", ReplyAction="http://tempuri.org/IService1/InsetThucDonResponse")]
        int InsetThucDon(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsetThucDon", ReplyAction="http://tempuri.org/IService1/InsetThucDonResponse")]
        System.Threading.Tasks.Task<int> InsetThucDonAsync(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateThucDon", ReplyAction="http://tempuri.org/IService1/UpdateThucDonResponse")]
        int UpdateThucDon(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateThucDon", ReplyAction="http://tempuri.org/IService1/UpdateThucDonResponse")]
        System.Threading.Tasks.Task<int> UpdateThucDonAsync(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteThucDon", ReplyAction="http://tempuri.org/IService1/DeleteThucDonResponse")]
        int DeleteThucDon(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteThucDon", ReplyAction="http://tempuri.org/IService1/DeleteThucDonResponse")]
        System.Threading.Tasks.Task<int> DeleteThucDonAsync(GUI.BUS.ThucDon thucDon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemThucDon", ReplyAction="http://tempuri.org/IService1/TimKiemThucDonResponse")]
        GUI.BUS.ThucDon[] TimKiemThucDon(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemThucDon", ReplyAction="http://tempuri.org/IService1/TimKiemThucDonResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TimKiemThucDonAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemThucDon2", ReplyAction="http://tempuri.org/IService1/TimKiemThucDon2Response")]
        GUI.BUS.ThucDon[] TimKiemThucDon2(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemThucDon2", ReplyAction="http://tempuri.org/IService1/TimKiemThucDon2Response")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TimKiemThucDon2Async(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemThucDon1", ReplyAction="http://tempuri.org/IService1/TimKiemThucDon1Response")]
        GUI.BUS.ThucDon[] TimKiemThucDon1(string ten);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TimKiemThucDon1", ReplyAction="http://tempuri.org/IService1/TimKiemThucDon1Response")]
        System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TimKiemThucDon1Async(string ten);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectTDPC", ReplyAction="http://tempuri.org/IService1/SelectTDPCResponse")]
        GUI.BUS.ChiTietHoaDon[] SelectTDPC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectTDPC", ReplyAction="http://tempuri.org/IService1/SelectTDPCResponse")]
        System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> SelectTDPCAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectTDPC1", ReplyAction="http://tempuri.org/IService1/SelectTDPC1Response")]
        GUI.BUS.ChiTietHoaDon[] SelectTDPC1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectTDPC1", ReplyAction="http://tempuri.org/IService1/SelectTDPC1Response")]
        System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> SelectTDPC1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InSertTDPC", ReplyAction="http://tempuri.org/IService1/InSertTDPCResponse")]
        int InSertTDPC(GUI.BUS.HoaDon hoaDon, string nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InSertTDPC", ReplyAction="http://tempuri.org/IService1/InSertTDPCResponse")]
        System.Threading.Tasks.Task<int> InSertTDPCAsync(GUI.BUS.HoaDon hoaDon, string nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdeteTDPC", ReplyAction="http://tempuri.org/IService1/UpdeteTDPCResponse")]
        int UpdeteTDPC(string check);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdeteTDPC", ReplyAction="http://tempuri.org/IService1/UpdeteTDPCResponse")]
        System.Threading.Tasks.Task<int> UpdeteTDPCAsync(string check);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GUI.BUS.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GUI.BUS.IService1>, GUI.BUS.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GUI.BUS.Ban DTOBAN(GUI.BUS.Ban ban) {
            return base.Channel.DTOBAN(ban);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.Ban> DTOBANAsync(GUI.BUS.Ban ban) {
            return base.Channel.DTOBANAsync(ban);
        }
        
        public GUI.BUS.ChiTietHoaDon DTOchitiethoadon(GUI.BUS.ChiTietHoaDon chitiethoadon) {
            return base.Channel.DTOchitiethoadon(chitiethoadon);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon> DTOchitiethoadonAsync(GUI.BUS.ChiTietHoaDon chitiethoadon) {
            return base.Channel.DTOchitiethoadonAsync(chitiethoadon);
        }
        
        public GUI.BUS.Gmail DTOGMAIL(GUI.BUS.Gmail gmail) {
            return base.Channel.DTOGMAIL(gmail);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.Gmail> DTOGMAILAsync(GUI.BUS.Gmail gmail) {
            return base.Channel.DTOGMAILAsync(gmail);
        }
        
        public GUI.BUS.HoaDon DTOHOAODN(GUI.BUS.HoaDon hoaDon) {
            return base.Channel.DTOHOAODN(hoaDon);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.HoaDon> DTOHOAODNAsync(GUI.BUS.HoaDon hoaDon) {
            return base.Channel.DTOHOAODNAsync(hoaDon);
        }
        
        public GUI.BUS.NhanVien DTONHANVIEN(GUI.BUS.NhanVien nhanVien) {
            return base.Channel.DTONHANVIEN(nhanVien);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.NhanVien> DTONHANVIENAsync(GUI.BUS.NhanVien nhanVien) {
            return base.Channel.DTONHANVIENAsync(nhanVien);
        }
        
        public GUI.BUS.NhomMon DTONHOMMON(GUI.BUS.NhomMon Nhommon) {
            return base.Channel.DTONHOMMON(Nhommon);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.NhomMon> DTONHOMMONAsync(GUI.BUS.NhomMon Nhommon) {
            return base.Channel.DTONHOMMONAsync(Nhommon);
        }
        
        public GUI.BUS.ThucDon DTOTHUCDON(GUI.BUS.ThucDon thucDon) {
            return base.Channel.DTOTHUCDON(thucDon);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon> DTOTHUCDONAsync(GUI.BUS.ThucDon thucDon) {
            return base.Channel.DTOTHUCDONAsync(thucDon);
        }
        
        public string[] RGB(GUI.BUS.NhomMon Nhommon) {
            return base.Channel.RGB(Nhommon);
        }
        
        public System.Threading.Tasks.Task<string[]> RGBAsync(GUI.BUS.NhomMon Nhommon) {
            return base.Channel.RGBAsync(Nhommon);
        }
        
        public int TONGTIEN(GUI.BUS.ChiTietHoaDon[] chitet) {
            return base.Channel.TONGTIEN(chitet);
        }
        
        public System.Threading.Tasks.Task<int> TONGTIENAsync(GUI.BUS.ChiTietHoaDon[] chitet) {
            return base.Channel.TONGTIENAsync(chitet);
        }
        
        public int TinhTienGiam(int n, GUI.BUS.ChiTietHoaDon[] chitet) {
            return base.Channel.TinhTienGiam(n, chitet);
        }
        
        public System.Threading.Tasks.Task<int> TinhTienGiamAsync(int n, GUI.BUS.ChiTietHoaDon[] chitet) {
            return base.Channel.TinhTienGiamAsync(n, chitet);
        }
        
        public void Send(string Gmail, GUI.BUS.Gmail sendmail) {
            base.Channel.Send(Gmail, sendmail);
        }
        
        public System.Threading.Tasks.Task SendAsync(string Gmail, GUI.BUS.Gmail sendmail) {
            return base.Channel.SendAsync(Gmail, sendmail);
        }
        
        public GUI.BUS.BLLBan BLLBAN(GUI.BUS.BLLBan N) {
            return base.Channel.BLLBAN(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLBan> BLLBANAsync(GUI.BUS.BLLBan N) {
            return base.Channel.BLLBANAsync(N);
        }
        
        public GUI.BUS.BLLChiTietHD BLLCTHD(GUI.BUS.BLLChiTietHD N) {
            return base.Channel.BLLCTHD(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLChiTietHD> BLLCTHDAsync(GUI.BUS.BLLChiTietHD N) {
            return base.Channel.BLLCTHDAsync(N);
        }
        
        public GUI.BUS.BLLHoaDon BLLHOADON(GUI.BUS.BLLHoaDon N) {
            return base.Channel.BLLHOADON(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLHoaDon> BLLHOADONAsync(GUI.BUS.BLLHoaDon N) {
            return base.Channel.BLLHOADONAsync(N);
        }
        
        public GUI.BUS.BLLNhanvien BLLNHANVIEN(GUI.BUS.BLLNhanvien N) {
            return base.Channel.BLLNHANVIEN(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLNhanvien> BLLNHANVIENAsync(GUI.BUS.BLLNhanvien N) {
            return base.Channel.BLLNHANVIENAsync(N);
        }
        
        public GUI.BUS.BLLNhomMon BLLNHOMMON(GUI.BUS.BLLNhomMon N) {
            return base.Channel.BLLNHOMMON(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLNhomMon> BLLNHOMMONAsync(GUI.BUS.BLLNhomMon N) {
            return base.Channel.BLLNHOMMONAsync(N);
        }
        
        public GUI.BUS.BLLThucDon BLLTHUCDON(GUI.BUS.BLLThucDon N) {
            return base.Channel.BLLTHUCDON(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLThucDon> BLLTHUCDONAsync(GUI.BUS.BLLThucDon N) {
            return base.Channel.BLLTHUCDONAsync(N);
        }
        
        public GUI.BUS.BLLThucDonPhaChe BLLTDPC(GUI.BUS.BLLThucDonPhaChe N) {
            return base.Channel.BLLTDPC(N);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.BLLThucDonPhaChe> BLLTDPCAsync(GUI.BUS.BLLThucDonPhaChe N) {
            return base.Channel.BLLTDPCAsync(N);
        }
        
        public GUI.BUS.Ban[] SelectBan() {
            return base.Channel.SelectBan();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.Ban[]> SelectBanAsync() {
            return base.Channel.SelectBanAsync();
        }
        
        public GUI.BUS.Ban[] TongSoBan() {
            return base.Channel.TongSoBan();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.Ban[]> TongSoBanAsync() {
            return base.Channel.TongSoBanAsync();
        }
        
        public int InsertBan(GUI.BUS.Ban ban) {
            return base.Channel.InsertBan(ban);
        }
        
        public System.Threading.Tasks.Task<int> InsertBanAsync(GUI.BUS.Ban ban) {
            return base.Channel.InsertBanAsync(ban);
        }
        
        public int UpdeteBan(GUI.BUS.Ban ban) {
            return base.Channel.UpdeteBan(ban);
        }
        
        public System.Threading.Tasks.Task<int> UpdeteBanAsync(GUI.BUS.Ban ban) {
            return base.Channel.UpdeteBanAsync(ban);
        }
        
        public int DeleteBan(GUI.BUS.Ban ban) {
            return base.Channel.DeleteBan(ban);
        }
        
        public System.Threading.Tasks.Task<int> DeleteBanAsync(GUI.BUS.Ban ban) {
            return base.Channel.DeleteBanAsync(ban);
        }
        
        public GUI.BUS.ChiTietHoaDon[] GetChiTietHD() {
            return base.Channel.GetChiTietHD();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> GetChiTietHDAsync() {
            return base.Channel.GetChiTietHDAsync();
        }
        
        public GUI.BUS.ChiTietHoaDon[] TimKiemCTHD(int timkiem) {
            return base.Channel.TimKiemCTHD(timkiem);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> TimKiemCTHDAsync(int timkiem) {
            return base.Channel.TimKiemCTHDAsync(timkiem);
        }
        
        public int InsetCTHD(GUI.BUS.ChiTietHoaDon chiTiet) {
            return base.Channel.InsetCTHD(chiTiet);
        }
        
        public System.Threading.Tasks.Task<int> InsetCTHDAsync(GUI.BUS.ChiTietHoaDon chiTiet) {
            return base.Channel.InsetCTHDAsync(chiTiet);
        }
        
        public int UpdateCTHD(GUI.BUS.ChiTietHoaDon chiTiet) {
            return base.Channel.UpdateCTHD(chiTiet);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCTHDAsync(GUI.BUS.ChiTietHoaDon chiTiet) {
            return base.Channel.UpdateCTHDAsync(chiTiet);
        }
        
        public int UpdateCTHD2(string MaHd) {
            return base.Channel.UpdateCTHD2(MaHd);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCTHD2Async(string MaHd) {
            return base.Channel.UpdateCTHD2Async(MaHd);
        }
        
        public int DeleteCTHD(string thucDon) {
            return base.Channel.DeleteCTHD(thucDon);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCTHDAsync(string thucDon) {
            return base.Channel.DeleteCTHDAsync(thucDon);
        }
        
        public GUI.BUS.HoaDon[] TimKiemHoaDon5() {
            return base.Channel.TimKiemHoaDon5();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TimKiemHoaDon5Async() {
            return base.Channel.TimKiemHoaDon5Async();
        }
        
        public string ThongkeHD() {
            return base.Channel.ThongkeHD();
        }
        
        public System.Threading.Tasks.Task<string> ThongkeHDAsync() {
            return base.Channel.ThongkeHDAsync();
        }
        
        public GUI.BUS.HoaDon[] GetHD() {
            return base.Channel.GetHD();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> GetHDAsync() {
            return base.Channel.GetHDAsync();
        }
        
        public int InsetHD(GUI.BUS.HoaDon hoaDon, string MANV) {
            return base.Channel.InsetHD(hoaDon, MANV);
        }
        
        public System.Threading.Tasks.Task<int> InsetHDAsync(GUI.BUS.HoaDon hoaDon, string MANV) {
            return base.Channel.InsetHDAsync(hoaDon, MANV);
        }
        
        public GUI.BUS.HoaDon[] TimKiemHoaDon1(System.DateTime time1, System.DateTime time2) {
            return base.Channel.TimKiemHoaDon1(time1, time2);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TimKiemHoaDon1Async(System.DateTime time1, System.DateTime time2) {
            return base.Channel.TimKiemHoaDon1Async(time1, time2);
        }
        
        public GUI.BUS.HoaDon[] TongSoHd(System.DateTime time1, System.DateTime time2) {
            return base.Channel.TongSoHd(time1, time2);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TongSoHdAsync(System.DateTime time1, System.DateTime time2) {
            return base.Channel.TongSoHdAsync(time1, time2);
        }
        
        public GUI.BUS.HoaDon[] TimKiemHoaDon2(System.DateTime time1, System.DateTime time2) {
            return base.Channel.TimKiemHoaDon2(time1, time2);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.HoaDon[]> TimKiemHoaDon2Async(System.DateTime time1, System.DateTime time2) {
            return base.Channel.TimKiemHoaDon2Async(time1, time2);
        }
        
        public GUI.BUS.ChiTietHoaDon[] TimKiemHoaDon(int maBan) {
            return base.Channel.TimKiemHoaDon(maBan);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> TimKiemHoaDonAsync(int maBan) {
            return base.Channel.TimKiemHoaDonAsync(maBan);
        }
        
        public int InsetHD1(GUI.BUS.HoaDon hoaDon) {
            return base.Channel.InsetHD1(hoaDon);
        }
        
        public System.Threading.Tasks.Task<int> InsetHD1Async(GUI.BUS.HoaDon hoaDon) {
            return base.Channel.InsetHD1Async(hoaDon);
        }
        
        public int UpdateHD(GUI.BUS.HoaDon hoaDon) {
            return base.Channel.UpdateHD(hoaDon);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHDAsync(GUI.BUS.HoaDon hoaDon) {
            return base.Channel.UpdateHDAsync(hoaDon);
        }
        
        public int DeleteHD(int hoaDon) {
            return base.Channel.DeleteHD(hoaDon);
        }
        
        public System.Threading.Tasks.Task<int> DeleteHDAsync(int hoaDon) {
            return base.Channel.DeleteHDAsync(hoaDon);
        }
        
        public GUI.BUS.NhanVien[] SelectNV() {
            return base.Channel.SelectNV();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.NhanVien[]> SelectNVAsync() {
            return base.Channel.SelectNVAsync();
        }
        
        public int InsertIntoNV(GUI.BUS.NhanVien nhanVien) {
            return base.Channel.InsertIntoNV(nhanVien);
        }
        
        public System.Threading.Tasks.Task<int> InsertIntoNVAsync(GUI.BUS.NhanVien nhanVien) {
            return base.Channel.InsertIntoNVAsync(nhanVien);
        }
        
        public int UpdateNV(GUI.BUS.NhanVien nhanVien) {
            return base.Channel.UpdateNV(nhanVien);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNVAsync(GUI.BUS.NhanVien nhanVien) {
            return base.Channel.UpdateNVAsync(nhanVien);
        }
        
        public int DeleteNV(string MANV) {
            return base.Channel.DeleteNV(MANV);
        }
        
        public System.Threading.Tasks.Task<int> DeleteNVAsync(string MANV) {
            return base.Channel.DeleteNVAsync(MANV);
        }
        
        public GUI.BUS.NhomMon[] SelectNhomMon() {
            return base.Channel.SelectNhomMon();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.NhomMon[]> SelectNhomMonAsync() {
            return base.Channel.SelectNhomMonAsync();
        }
        
        public GUI.BUS.NhomMon[] TongNhomMon() {
            return base.Channel.TongNhomMon();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.NhomMon[]> TongNhomMonAsync() {
            return base.Channel.TongNhomMonAsync();
        }
        
        public int InsertNhomMon(GUI.BUS.NhomMon nhom) {
            return base.Channel.InsertNhomMon(nhom);
        }
        
        public System.Threading.Tasks.Task<int> InsertNhomMonAsync(GUI.BUS.NhomMon nhom) {
            return base.Channel.InsertNhomMonAsync(nhom);
        }
        
        public int UpdateNhomMon(GUI.BUS.NhomMon nhom) {
            return base.Channel.UpdateNhomMon(nhom);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNhomMonAsync(GUI.BUS.NhomMon nhom) {
            return base.Channel.UpdateNhomMonAsync(nhom);
        }
        
        public int DeleteNhomMon(GUI.BUS.NhomMon nhom) {
            return base.Channel.DeleteNhomMon(nhom);
        }
        
        public System.Threading.Tasks.Task<int> DeleteNhomMonAsync(GUI.BUS.NhomMon nhom) {
            return base.Channel.DeleteNhomMonAsync(nhom);
        }
        
        public GUI.BUS.NhomMon[] TimKiemNhomMon(string nhom) {
            return base.Channel.TimKiemNhomMon(nhom);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.NhomMon[]> TimKiemNhomMonAsync(string nhom) {
            return base.Channel.TimKiemNhomMonAsync(nhom);
        }
        
        public GUI.BUS.ThucDon[] SelectThucDon() {
            return base.Channel.SelectThucDon();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> SelectThucDonAsync() {
            return base.Channel.SelectThucDonAsync();
        }
        
        public GUI.BUS.ThucDon[] TongSoMon() {
            return base.Channel.TongSoMon();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TongSoMonAsync() {
            return base.Channel.TongSoMonAsync();
        }
        
        public GUI.BUS.ThucDon[] SelectThucDon1(System.DateTime time1, System.DateTime time2) {
            return base.Channel.SelectThucDon1(time1, time2);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> SelectThucDon1Async(System.DateTime time1, System.DateTime time2) {
            return base.Channel.SelectThucDon1Async(time1, time2);
        }
        
        public GUI.BUS.ThucDon[] SelectThucDon2(System.DateTime time1, System.DateTime time2) {
            return base.Channel.SelectThucDon2(time1, time2);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> SelectThucDon2Async(System.DateTime time1, System.DateTime time2) {
            return base.Channel.SelectThucDon2Async(time1, time2);
        }
        
        public int InsetThucDon(GUI.BUS.ThucDon thucDon) {
            return base.Channel.InsetThucDon(thucDon);
        }
        
        public System.Threading.Tasks.Task<int> InsetThucDonAsync(GUI.BUS.ThucDon thucDon) {
            return base.Channel.InsetThucDonAsync(thucDon);
        }
        
        public int UpdateThucDon(GUI.BUS.ThucDon thucDon) {
            return base.Channel.UpdateThucDon(thucDon);
        }
        
        public System.Threading.Tasks.Task<int> UpdateThucDonAsync(GUI.BUS.ThucDon thucDon) {
            return base.Channel.UpdateThucDonAsync(thucDon);
        }
        
        public int DeleteThucDon(GUI.BUS.ThucDon thucDon) {
            return base.Channel.DeleteThucDon(thucDon);
        }
        
        public System.Threading.Tasks.Task<int> DeleteThucDonAsync(GUI.BUS.ThucDon thucDon) {
            return base.Channel.DeleteThucDonAsync(thucDon);
        }
        
        public GUI.BUS.ThucDon[] TimKiemThucDon(string Name) {
            return base.Channel.TimKiemThucDon(Name);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TimKiemThucDonAsync(string Name) {
            return base.Channel.TimKiemThucDonAsync(Name);
        }
        
        public GUI.BUS.ThucDon[] TimKiemThucDon2(string Name) {
            return base.Channel.TimKiemThucDon2(Name);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TimKiemThucDon2Async(string Name) {
            return base.Channel.TimKiemThucDon2Async(Name);
        }
        
        public GUI.BUS.ThucDon[] TimKiemThucDon1(string ten) {
            return base.Channel.TimKiemThucDon1(ten);
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ThucDon[]> TimKiemThucDon1Async(string ten) {
            return base.Channel.TimKiemThucDon1Async(ten);
        }
        
        public GUI.BUS.ChiTietHoaDon[] SelectTDPC() {
            return base.Channel.SelectTDPC();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> SelectTDPCAsync() {
            return base.Channel.SelectTDPCAsync();
        }
        
        public GUI.BUS.ChiTietHoaDon[] SelectTDPC1() {
            return base.Channel.SelectTDPC1();
        }
        
        public System.Threading.Tasks.Task<GUI.BUS.ChiTietHoaDon[]> SelectTDPC1Async() {
            return base.Channel.SelectTDPC1Async();
        }
        
        public int InSertTDPC(GUI.BUS.HoaDon hoaDon, string nv) {
            return base.Channel.InSertTDPC(hoaDon, nv);
        }
        
        public System.Threading.Tasks.Task<int> InSertTDPCAsync(GUI.BUS.HoaDon hoaDon, string nv) {
            return base.Channel.InSertTDPCAsync(hoaDon, nv);
        }
        
        public int UpdeteTDPC(string check) {
            return base.Channel.UpdeteTDPC(check);
        }
        
        public System.Threading.Tasks.Task<int> UpdeteTDPCAsync(string check) {
            return base.Channel.UpdeteTDPCAsync(check);
        }
    }
}
